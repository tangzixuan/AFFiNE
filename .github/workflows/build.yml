name: Build & Test

on:
  push:
    branches:
      - canary
      - v[0-9]+.[0-9]+.x-staging
      - v[0-9]+.[0-9]+.x
    paths-ignore:
      - README.md
      - .github/**
      - '!.github/workflows/build.yml'
      - '!.github/actions/build-rust/action.yml'
      - '!.github/actions/setup-node/action.yml'
  pull_request:
  merge_group:
    branches:
      - canary
      - v[0-9]+.[0-9]+.x-staging
      - v[0-9]+.[0-9]+.x
    paths-ignore:
      - README.md
      - .github/**
      - '!.github/workflows/build.yml'
      - '!.github/actions/build-rust/action.yml'
      - '!.github/actions/setup-node/action.yml'

env:
  DEBUG: napi:*
  BUILD_TYPE: canary
  APP_NAME: affine
  AFFINE_ENV: dev
  COVERAGE: true
  DISTRIBUTION: browser
  MACOSX_DEPLOYMENT_TARGET: '10.13'
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Run oxlint
        # oxlint is fast, so wrong code will fail quickly
        run: yarn dlx oxlint@latest .
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          electron-install: false
      - name: Run i18n codegen
        run: yarn i18n-codegen gen
      - name: Run ESLint
        run: yarn lint:eslint --max-warnings=0
      - name: Run Prettier
        # Set nmMode in `actions/setup-node` will modify the .yarnrc.yml
        run: |
          git checkout .yarnrc.yml
          yarn lint:prettier
      - name: Run circular
        run: yarn circular
      - name: Run Type Check
        run: yarn typecheck

  check-yarn-binary:
    name: Check yarn binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run check
        run: |
          yarn set version $(node -e "console.log(require('./package.json').packageManager.split('@')[1])")
          git diff --exit-code

  e2e-plugin-test:
    name: E2E Plugin Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          playwright-install: true
          electron-install: false
      - name: Run playwright tests
        run: yarn e2e --forbid-only
        working-directory: tests/affine-plugin
        env:
          COVERAGE: true
      - name: Collect code coverage report
        run: yarn exec nyc report -t .nyc_output --report-dir .coverage --reporter=lcov

      - name: Upload e2e test coverage results
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.coverage/lcov.info
          flags: e2e-plugin-test
          name: affine
          fail_ci_if_error: false

      - name: Upload test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-e2e-plugin
          path: ./test-results
          if-no-files-found: ignore

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          playwright-install: true
          electron-install: false

      - name: Run playwright tests
        run: yarn e2e --forbid-only --shard=${{ matrix.shard }}/${{ strategy.job-total }}
        working-directory: tests/affine-local
        env:
          COVERAGE: true

      - name: Collect code coverage report
        run: yarn exec nyc report -t .nyc_output --report-dir .coverage --reporter=lcov

      - name: Upload e2e test coverage results
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.coverage/lcov.info
          flags: e2etest
          name: affine
          fail_ci_if_error: false

      - name: Upload test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-e2e-${{ matrix.shard }}
          path: ./test-results
          if-no-files-found: ignore

  e2e-migration-test:
    name: E2E Migration Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          playwright-install: true
          electron-install: false

      - name: Run playwright tests
        run: yarn workspace @affine-test/affine-migration e2e --forbid-only

      - name: Upload test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-results-e2e-migration
          path: ./tests/affine-migration/test-results
          if-no-files-found: ignore

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
        with:
          electron-install: false

      - name: Build AFFiNE native
        uses: ./.github/actions/build-rust
        with:
          target: x86_64-unknown-linux-gnu
          package: '@affine/native'
          nx_token: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

      - name: Unit Test
        run: yarn nx test:coverage @affine/monorepo

      - name: Upload unit test coverage results
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./.coverage/store/lcov.info
          flags: unittest
          name: affine
          fail_ci_if_error: false
